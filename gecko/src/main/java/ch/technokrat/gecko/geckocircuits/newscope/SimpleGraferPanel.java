/*  This file is part of GeckoCIRCUITS. Copyright (C) ETH Zurich, Gecko-Simulations GmbH
 *
 *  GeckoCIRCUITS is free software: you can redistribute it and/or modify it under 
 *  the terms of the GNU General Public License as published by the Free Software 
 *  Foundation, either version 3 of the License, or (at your option) any later version.
 *
 *  GeckoCIRCUITS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 *  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 *  PURPOSE.  See the GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along with
 *  GeckoCIRCUITS.  If not, see <http://www.gnu.org/licenses/>.
 */
package ch.technokrat.gecko.geckocircuits.newscope;

import ch.technokrat.gecko.geckocircuits.datacontainer.AbstractDataContainer;
import java.awt.BorderLayout;
import java.awt.Color;

public class SimpleGraferPanel extends javax.swing.JPanel {

    final GraferV4 _grafer;

    public SimpleGraferPanel() {

        super();
        initComponents();
        _grafer = null;
        assert false;
    }

    public SimpleGraferPanel(final GraferV4 grafer) {
        super();

        initComponents();

        _grafer = grafer;
        jPanelGraph.setLayout(new BorderLayout());
        jPanelGraph.add(_grafer);

        _grafer.setOpaque(true);
        _grafer.setBackground(Color.WHITE);
        _grafer.setMausModus(GraferV4.MausModus.NONE);
    }


    public void setDataContainer(final AbstractDataContainer dataContainer) {
        assert dataContainer != null;
        _grafer.setDataContainer(dataContainer);
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    //CHECKSTYLE:OFF
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">                          
    private void initComponents() {

        jPanelGraph = new javax.swing.JPanel();

        setOpaque(false);


        jPanelGraph.setOpaque(false);
        jPanelGraph.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {                
                jPanelGraphComponentResized(evt);
            }
        });                                
        

        javax.swing.GroupLayout jPanelGraphLayout = new javax.swing.GroupLayout(jPanelGraph);
        jPanelGraph.setLayout(jPanelGraphLayout);
        jPanelGraphLayout.setHorizontalGroup(
                jPanelGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 710, Short.MAX_VALUE));
        jPanelGraphLayout.setVerticalGroup(
                jPanelGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGap(0, 465, Short.MAX_VALUE));


        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()                
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelGraph)
                .addContainerGap()));
        layout.setVerticalGroup(
                layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)                
                .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelGraph, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE)
                .addContainerGap()));
    }// </editor-fold>                        

    //CHECKSTYLE:ON
    private void jButtonShowAllActionPerformed(java.awt.event.ActionEvent evt) {//NOPMD                                               
        _grafer.doZoomAutoFit();
    }



    private void jPanelGraphComponentResized(java.awt.event.ComponentEvent evt) {
        if (_grafer != null) {
            _grafer.setAxisPositions();
            this.repaint();
        }
    }

    private javax.swing.JPanel jPanelGraph;

}
