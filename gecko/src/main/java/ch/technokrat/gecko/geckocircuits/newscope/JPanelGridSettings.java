/*  This file is part of GeckoCIRCUITS. Copyright (C) ETH Zurich, Gecko-Simulations GmbH
 *
 *  GeckoCIRCUITS is free software: you can redistribute it and/or modify it under 
 *  the terms of the GNU General Public License as published by the Free Software 
 *  Foundation, either version 3 of the License, or (at your option) any later version.
 *
 *  GeckoCIRCUITS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 *  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 *  PURPOSE.  See the GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along with
 *  GeckoCIRCUITS.  If not, see <http://www.gnu.org/licenses/>.
 */
package ch.technokrat.gecko.geckocircuits.newscope;

/**
 *
 * @author andy
 */
public class JPanelGridSettings extends javax.swing.JPanel {
    private Axis _axis;
    private GraferV4 _grafer;
    private boolean _initDone;

    /** This constructor is only meant for the netbeans gui builder! */
    public JPanelGridSettings() {
        super();
        initComponents();      
        _axis = null;
        _grafer = null;
        _initDone = false;
    }
    
    public void init(final Axis axis, final GraferV4 grafer) {
        _axis = axis;
        
        final AxisTickSettings tickSettings = _axis._axisTickSettings;
        final AxisGridSettings gridSettings = _axis._axisGridSettings;
        
        jCheckBoxAutoSpacing.setSelected(true);
        jCheckBoxAutoSpacingActionPerformed(null);
        jCheckBoxAutoGridLine.setSelected(gridSettings.isAutoGrids());
        jCheckBoxShowGridLineMaj.setEnabled(!gridSettings.isAutoGrids());
        jCheckBoxShowGridLineMin.setEnabled(!gridSettings.isAutoGrids());
        
        updateTextFields();
        
        jCheckBoxShowLabelMaj.setSelected(tickSettings.isShowLabelsMaj());
        jCheckBoxShowLabelMin.setSelected(tickSettings.isShowLabelsMin());
        jCheckBoxShowGridLineMaj.setSelected(gridSettings.isUserShowGridMaj());
        jCheckBoxShowGridLineMin.setSelected(gridSettings.isUserShowGridMin());
        
        jPanelLineMajGrid.init(gridSettings.getSettableMaj(), grafer);
        jPanelLineMinGrid.init(gridSettings.getSettableMin(), grafer);
        
        // transparency cannot be changed
        jPanelLineMajGrid.jLabel3.setVisible(false);
        jPanelLineMajGrid.jSpinnerTransp.setVisible(false);
        jPanelLineMinGrid.jLabel3.setVisible(false);
        jPanelLineMinGrid.jSpinnerTransp.setVisible(false);
        
        _grafer = grafer;
        _initDone = true;
    }
    
    public void updateTextFields() {
        formatJTextFieldTickSpace.setNumberToField(_axis._tickSpacing);
        formatJTextFieldNumTicks.setNumberToField(_axis._axisTickSettings.getAnzTicksMinor());
        
        formatJTextFieldTickLenghtMaj.setNumberToField(_axis._axisTickSettings.getTickLengthMaj());
        formatJTextFieldTickLengthMin.setNumberToField(_axis._axisTickSettings.getTickLengthMin());
    }
    
    private void repaintComponent() {
        if (_grafer != null) {
            _grafer.repaint();
        }
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelMaj = new javax.swing.JPanel();
        jCheckBoxShowGridLineMaj = new javax.swing.JCheckBox();
        jPanelLineMajGrid = new ch.technokrat.gecko.geckocircuits.newscope.JPanelLineProperties();
        jCheckBoxAutoSpacing = new javax.swing.JCheckBox();
        jLabelTickSpace = new javax.swing.JLabel();
        jLabelTickLengthMaj = new javax.swing.JLabel();
        jCheckBoxShowLabelMaj = new javax.swing.JCheckBox();
        formatJTextFieldTickSpace = new ch.technokrat.gecko.geckocircuits.allg.FormatJTextField();
        formatJTextFieldTickLenghtMaj = new ch.technokrat.gecko.geckocircuits.allg.FormatJTextField();
        jPanelMin = new javax.swing.JPanel();
        jCheckBoxShowGridLineMin = new javax.swing.JCheckBox();
        jPanelLineMinGrid = new ch.technokrat.gecko.geckocircuits.newscope.JPanelLineProperties();
        jLabelNumTicks = new javax.swing.JLabel();
        jLabelTickLengthMin = new javax.swing.JLabel();
        jCheckBoxShowLabelMin = new javax.swing.JCheckBox();
        formatJTextFieldNumTicks = new ch.technokrat.gecko.geckocircuits.allg.FormatJTextField();
        formatJTextFieldTickLengthMin = new ch.technokrat.gecko.geckocircuits.allg.FormatJTextField();
        jCheckBoxAutoGridLine = new javax.swing.JCheckBox();

        setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Define Ticks", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jPanelMaj.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "At Major-Ticks and Grid", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jCheckBoxShowGridLineMaj.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBoxShowGridLineMaj.setText("Show Grid Line");
        jCheckBoxShowGridLineMaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShowGridLineMajActionPerformed(evt);
            }
        });

        jCheckBoxAutoSpacing.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBoxAutoSpacing.setText("Auto-Spacing");
        jCheckBoxAutoSpacing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAutoSpacingActionPerformed(evt);
            }
        });

        jLabelTickSpace.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabelTickSpace.setText("Tick-Space:");

        jLabelTickLengthMaj.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabelTickLengthMaj.setText("Tick-Length:");

        jCheckBoxShowLabelMaj.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBoxShowLabelMaj.setText("Show label at Tick");
        jCheckBoxShowLabelMaj.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShowLabelMajActionPerformed(evt);
            }
        });

        formatJTextFieldTickSpace.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formatJTextFieldTickSpaceKeyReleased(evt);
            }
        });

        formatJTextFieldTickLenghtMaj.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formatJTextFieldTickLenghtMajKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanelMajLayout = new javax.swing.GroupLayout(jPanelMaj);
        jPanelMaj.setLayout(jPanelMajLayout);
        jPanelMajLayout.setHorizontalGroup(
            jPanelMajLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMajLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMajLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBoxAutoSpacing, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxShowGridLineMaj, javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxShowLabelMaj, javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanelMajLayout.createSequentialGroup()
                        .addGroup(jPanelMajLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelTickLengthMaj)
                            .addComponent(jLabelTickSpace))
                        .addGap(28, 28, 28)
                        .addGroup(jPanelMajLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(formatJTextFieldTickLenghtMaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(formatJTextFieldTickSpace, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(16, 16, 16))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelMajLayout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(jPanelLineMajGrid, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        jPanelMajLayout.setVerticalGroup(
            jPanelMajLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMajLayout.createSequentialGroup()
                .addComponent(jCheckBoxAutoSpacing)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMajLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTickSpace)
                    .addComponent(formatJTextFieldTickSpace, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMajLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelTickLengthMaj)
                    .addComponent(formatJTextFieldTickLenghtMaj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxShowLabelMaj)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxShowGridLineMaj)
                .addGap(18, 18, 18)
                .addComponent(jPanelLineMajGrid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jPanelMin.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "At Minor-Ticks and Grid", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jCheckBoxShowGridLineMin.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBoxShowGridLineMin.setText("Show Grid Line");
        jCheckBoxShowGridLineMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShowGridLineMinActionPerformed(evt);
            }
        });

        jLabelNumTicks.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabelNumTicks.setText("Number of Ticks:");

        jLabelTickLengthMin.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabelTickLengthMin.setText("Tick-Length:");

        jCheckBoxShowLabelMin.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBoxShowLabelMin.setText("Show label at Tick");
        jCheckBoxShowLabelMin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShowLabelMinActionPerformed(evt);
            }
        });

        formatJTextFieldNumTicks.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formatJTextFieldNumTicksKeyReleased(evt);
            }
        });

        formatJTextFieldTickLengthMin.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                formatJTextFieldTickLengthMinKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout jPanelMinLayout = new javax.swing.GroupLayout(jPanelMin);
        jPanelMin.setLayout(jPanelMinLayout);
        jPanelMinLayout.setHorizontalGroup(
            jPanelMinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMinLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelMinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelMinLayout.createSequentialGroup()
                        .addGroup(jPanelMinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabelNumTicks)
                            .addComponent(jLabelTickLengthMin))
                        .addGap(18, 18, 18)
                        .addGroup(jPanelMinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(formatJTextFieldTickLengthMin, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE)
                            .addComponent(formatJTextFieldNumTicks, javax.swing.GroupLayout.DEFAULT_SIZE, 137, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(jPanelMinLayout.createSequentialGroup()
                        .addGroup(jPanelMinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jCheckBoxShowGridLineMin)
                            .addComponent(jCheckBoxShowLabelMin)
                            .addComponent(jPanelLineMinGrid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        jPanelMinLayout.setVerticalGroup(
            jPanelMinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelMinLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(jPanelMinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelNumTicks)
                    .addComponent(formatJTextFieldNumTicks, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanelMinLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(formatJTextFieldTickLengthMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabelTickLengthMin, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxShowLabelMin)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxShowGridLineMin)
                .addGap(37, 37, 37)
                .addComponent(jPanelLineMinGrid, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jCheckBoxAutoGridLine.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBoxAutoGridLine.setText("Auto-Grids");
        jCheckBoxAutoGridLine.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAutoGridLineActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBoxAutoGridLine)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jPanelMaj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanelMin, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jCheckBoxAutoGridLine)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanelMin, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanelMaj, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jCheckBoxAutoSpacingActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAutoSpacingActionPerformed
        if (jCheckBoxAutoSpacing.isSelected()) {
            _axis._axisTickSettings.setAutoTickSpacing(true);
            formatJTextFieldTickSpace.setEditable(false);
            formatJTextFieldTickSpace.setNumberToField(_axis.getAutoTickSpacing());
        } else {
            _axis._axisTickSettings.setAutoTickSpacing(false);
            formatJTextFieldTickSpace.setEditable(true);
        }
    }//GEN-LAST:event_jCheckBoxAutoSpacingActionPerformed

    private void jCheckBoxShowLabelMajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShowLabelMajActionPerformed
        if (_initDone) {
            if (jCheckBoxShowLabelMaj.isSelected()) {
                _axis._axisTickSettings.setShowLabelsMaj(true);
            } else {
                _axis._axisTickSettings.setShowLabelsMaj(false);
            }
            repaintComponent();
        }
    }//GEN-LAST:event_jCheckBoxShowLabelMajActionPerformed

    private void jCheckBoxShowGridLineMajActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShowGridLineMajActionPerformed
        if (_initDone) {
            if (jCheckBoxShowGridLineMaj.isSelected()) {
                _axis._axisGridSettings.setUserShowGridMaj(true);
            } else {
                _axis._axisGridSettings.setUserShowGridMaj(false);
            }
            repaintComponent();
        }
    }//GEN-LAST:event_jCheckBoxShowGridLineMajActionPerformed

    private void jCheckBoxShowLabelMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShowLabelMinActionPerformed
        if (_initDone) {
            if (jCheckBoxShowLabelMin.isSelected()) {
                _axis._axisTickSettings.setShowLabelsMin(true);
            } else {
                _axis._axisTickSettings.setShowLabelsMin(false);
            }
            repaintComponent();
        }
    }//GEN-LAST:event_jCheckBoxShowLabelMinActionPerformed

    private void jCheckBoxShowGridLineMinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxShowGridLineMinActionPerformed
        if (_initDone) {
            if (jCheckBoxShowGridLineMin.isSelected()) {
                _axis._axisGridSettings.setUserShowGridMin(true);
            } else {
                _axis._axisGridSettings.setUserShowGridMin(false);
            }
            repaintComponent();
        }
    }//GEN-LAST:event_jCheckBoxShowGridLineMinActionPerformed

    private void jCheckBoxAutoGridLineActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAutoGridLineActionPerformed
        if (_initDone) {
            if (jCheckBoxAutoGridLine.isSelected()) {
                _axis._axisGridSettings.setAutoGrids(true);
                jCheckBoxShowGridLineMaj.setEnabled(false);
                jCheckBoxShowGridLineMin.setEnabled(false);
            } else {
                _axis._axisGridSettings.setAutoGrids(false);
                jCheckBoxShowGridLineMaj.setEnabled(true);
                jCheckBoxShowGridLineMin.setEnabled(true);
            }
            repaintComponent();
        }
    }//GEN-LAST:event_jCheckBoxAutoGridLineActionPerformed

    private void formatJTextFieldTickSpaceKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formatJTextFieldTickSpaceKeyReleased
        if (_initDone) {
            _axis._tickSpacing = formatJTextFieldTickSpace.getNumberFromField();
            repaintComponent();
        }
    }//GEN-LAST:event_formatJTextFieldTickSpaceKeyReleased

    private void formatJTextFieldNumTicksKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formatJTextFieldNumTicksKeyReleased
        if (_initDone) {
            _axis._axisTickSettings.setAnzTicksMinor((int) formatJTextFieldNumTicks.getNumberFromField());
            repaintComponent();
        }
    }//GEN-LAST:event_formatJTextFieldNumTicksKeyReleased

    private void formatJTextFieldTickLengthMinKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formatJTextFieldTickLengthMinKeyReleased
        if (_initDone) {
            _axis._axisTickSettings.setTickLengthMin((int)
                    formatJTextFieldTickLengthMin.getNumberFromField());
            repaintComponent();
        }
    }//GEN-LAST:event_formatJTextFieldTickLengthMinKeyReleased

    private void formatJTextFieldTickLenghtMajKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_formatJTextFieldTickLenghtMajKeyReleased
        if (_initDone) {
            _axis._axisTickSettings.setTickLengthMaj((int)
                    formatJTextFieldTickLenghtMaj.getNumberFromField());
            repaintComponent();
        }
    }//GEN-LAST:event_formatJTextFieldTickLenghtMajKeyReleased

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ch.technokrat.gecko.geckocircuits.allg.FormatJTextField formatJTextFieldNumTicks;
    private ch.technokrat.gecko.geckocircuits.allg.FormatJTextField formatJTextFieldTickLenghtMaj;
    private ch.technokrat.gecko.geckocircuits.allg.FormatJTextField formatJTextFieldTickLengthMin;
    private ch.technokrat.gecko.geckocircuits.allg.FormatJTextField formatJTextFieldTickSpace;
    private javax.swing.JCheckBox jCheckBoxAutoGridLine;
    private javax.swing.JCheckBox jCheckBoxAutoSpacing;
    private javax.swing.JCheckBox jCheckBoxShowGridLineMaj;
    private javax.swing.JCheckBox jCheckBoxShowGridLineMin;
    private javax.swing.JCheckBox jCheckBoxShowLabelMaj;
    private javax.swing.JCheckBox jCheckBoxShowLabelMin;
    private javax.swing.JLabel jLabelNumTicks;
    private javax.swing.JLabel jLabelTickLengthMaj;
    private javax.swing.JLabel jLabelTickLengthMin;
    private javax.swing.JLabel jLabelTickSpace;
    private ch.technokrat.gecko.geckocircuits.newscope.JPanelLineProperties jPanelLineMajGrid;
    private ch.technokrat.gecko.geckocircuits.newscope.JPanelLineProperties jPanelLineMinGrid;
    private javax.swing.JPanel jPanelMaj;
    private javax.swing.JPanel jPanelMin;
    // End of variables declaration//GEN-END:variables
}
