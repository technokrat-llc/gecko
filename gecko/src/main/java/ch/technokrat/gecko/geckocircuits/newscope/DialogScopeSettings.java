/*  This file is part of GeckoCIRCUITS. Copyright (C) ETH Zurich, Gecko-Simulations GmbH
 *
 *  GeckoCIRCUITS is free software: you can redistribute it and/or modify it under 
 *  the terms of the GNU General Public License as published by the Free Software 
 *  Foundation, either version 3 of the License, or (at your option) any later version.
 *
 *  GeckoCIRCUITS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 *  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 *  PURPOSE.  See the GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along with
 *  GeckoCIRCUITS.  If not, see <http://www.gnu.org/licenses/>.
 */
package ch.technokrat.gecko.geckocircuits.newscope;

import ch.technokrat.gecko.geckocircuits.circuit.NameAlreadyExistsException;
import ch.technokrat.gecko.geckocircuits.circuit.SchematischeEingabe2;
import ch.technokrat.gecko.geckocircuits.control.ReglerOSZI;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author andreas
 */
public class DialogScopeSettings extends javax.swing.JDialog {
    private final ReglerOSZI _reglerOSZI;
    private final boolean _initDone;
    private final JFrame _parentScopeFrame;
    

    DialogScopeSettings(final JFrame parent, final ReglerOSZI regelBlockOSZI, final boolean modal) {
        super(parent, modal);        
        initComponents();
        this.setTitle("General scope settings");
        _reglerOSZI = regelBlockOSZI;  
        _parentScopeFrame = parent;        
        jTextFieldScopeName.setText(_reglerOSZI.getStringID());
        jCheckBoxAntiAliasing.setSelected(_reglerOSZI.isAntiAliasing());
        jCheckBoxShowName.setSelected(_reglerOSZI.isNameVisible());
        _initDone = true;
        setLocationRelativeTo(parent);
        this.getRootPane().setDefaultButton(jButtonOk);
    }

    /**
     * This method is called from within the constructor to initialize the form. WARNING: Do NOT modify this code. The content of
     * this method is always regenerated by the Form Editor.
     */    
    //CHECKSTYLE:OFF
    @SuppressWarnings("PMD")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jButtonOk = new javax.swing.JButton();
        jCheckBoxAntiAliasing = new javax.swing.JCheckBox();
        jCheckBoxShowName = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jTextFieldScopeName = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setLocationByPlatform(true);
        setResizable(false);

        jButtonOk.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jButtonOk.setText("Ok");
        jButtonOk.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonOkActionPerformed(evt);
            }
        });

        jCheckBoxAntiAliasing.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jCheckBoxAntiAliasing.setText("Use Antialiasing for data display");
        jCheckBoxAntiAliasing.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAntiAliasingActionPerformed(evt);
            }
        });

        jCheckBoxShowName.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jCheckBoxShowName.setText("Show scope name next to symbol");
        jCheckBoxShowName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxShowNameActionPerformed(evt);
            }
        });

        jLabel1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jLabel1.setText("Scope name:");

        jTextFieldScopeName.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jTextFieldScopeName.setText("jTextField1");
        jTextFieldScopeName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jTextFieldScopeNameKeyReleased(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jTextFieldScopeName))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jCheckBoxAntiAliasing))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jCheckBoxShowName))
                            .addGroup(layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(jLabel1))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(83, 83, 83)
                                .addComponent(jButtonOk, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGap(0, 22, Short.MAX_VALUE)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jCheckBoxAntiAliasing)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jCheckBoxShowName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldScopeName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButtonOk)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    // CHECKSTYLE:ON
    
    
    private void jCheckBoxAntiAliasingActionPerformed(java.awt.event.ActionEvent evt) {//NOPMD//GEN-FIRST:event_jCheckBoxAntiAliasingActionPerformed
        if(!_initDone) {
            return;
        }
        _reglerOSZI.setAntiAliasing(jCheckBoxAntiAliasing.isSelected());
        _parentScopeFrame.repaint();
        
    }//GEN-LAST:event_jCheckBoxAntiAliasingActionPerformed

    private void jCheckBoxShowNameActionPerformed(java.awt.event.ActionEvent evt) {//NOPMD//GEN-FIRST:event_jCheckBoxShowNameActionPerformed
        if(!_initDone) {
            return;
        }
        _reglerOSZI.setNameVisible(jCheckBoxShowName.isSelected());
    }//GEN-LAST:event_jCheckBoxShowNameActionPerformed

    private void jButtonOkActionPerformed(java.awt.event.ActionEvent evt) {//NOPMD//GEN-FIRST:event_jButtonOkActionPerformed
        
            try {
                _reglerOSZI.setNewNameCheckedUndoable(jTextFieldScopeName.getText());        
                this.dispose();
            } catch (NameAlreadyExistsException ex) {
                JOptionPane.showMessageDialog(null, "The selected Scope name  \"" + jTextFieldScopeName.getText() + 
                    "\" is already used for another component!\n "
                    + "Please select a different name.", "Naming conflict!", JOptionPane.WARNING_MESSAGE);
                ex.printStackTrace();
            }
            
        
    }//GEN-LAST:event_jButtonOkActionPerformed

    private void jTextFieldScopeNameKeyReleased(java.awt.event.KeyEvent evt) {//NOPMD//GEN-FIRST:event_jTextFieldScopeNameKeyReleased
        _parentScopeFrame.setTitle(jTextFieldScopeName.getText());
    }//GEN-LAST:event_jTextFieldScopeNameKeyReleased

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonOk;
    private javax.swing.JCheckBox jCheckBoxAntiAliasing;
    private javax.swing.JCheckBox jCheckBoxShowName;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JTextField jTextFieldScopeName;
    // End of variables declaration//GEN-END:variables
}
