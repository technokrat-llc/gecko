/*  This file is part of GeckoCIRCUITS. Copyright (C) ETH Zurich, Gecko-Simulations GmbH
 *
 *  GeckoCIRCUITS is free software: you can redistribute it and/or modify it under 
 *  the terms of the GNU General Public License as published by the Free Software 
 *  Foundation, either version 3 of the License, or (at your option) any later version.
 *
 *  GeckoCIRCUITS is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 *  without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR
 *  PURPOSE.  See the GNU General Public License for more details.
 *
 *  You should have received a copy of the GNU General Public License along with
 *  GeckoCIRCUITS.  If not, see <http://www.gnu.org/licenses/>.
 */
package ch.technokrat.gecko.geckocircuits.newscope;

import javax.swing.JOptionPane;

/**
 *
 * @author andy
 */
public class JPanelAxisSettings2 extends javax.swing.JPanel {

    private GraferV4 _grafer;
    private Axis _axis;
    private boolean _initDone;

    /** Creates new form JPanelAxisSettings2 */
    public JPanelAxisSettings2() {
        super();
        initComponents();
        _grafer = null;
        _axis = null;
        _initDone = false;
    }

    public void init(final GraferV4 grafer, final Axis axis) {
        _axis = axis;
        jTextFieldAxisLabel.setText(_axis._axisSettings.getAchseBeschriftung());

        for (AxisLinLog axisType : AxisLinLog.values()) {
            jComboBoxScaleType.addItem(axisType);
        }
        jComboBoxScaleType.setSelectedIndex(_axis.getAxisType().ordinal());
        jCheckBoxAutoScale.setSelected(_axis._axisMinMax.isAutoEnabled());
        jCheckBoxSymmetricZero.setSelected(_axis._axisMinMax.isCommonZero());
        jCheckBoxAutoScaleActionPerformed(null);
        jTextFieldAxisLabel.setText(_axis._axisSettings.getAchseBeschriftung());

        setAxisLimitsToFields();

        jPanelLinePropAxis.init(_axis._axisSettings, grafer);
        jPanelGridSettings.init(_axis, grafer);

        // transparency cannot be changed
        jPanelLinePropAxis.jLabel3.setVisible(false);
        jPanelLinePropAxis.jSpinnerTransp.setVisible(false);

        _grafer = grafer;
        _initDone = true;
    }

    private void setAxisLimitsToFields() {
        final HiLoData axisLimits = _axis._axisMinMax.getLimits();
        formatJTextFieldMinVal.setNumberToField(axisLimits._yLo);
        formatJTextFieldMaxVal.setNumberToField(axisLimits._yHi);
    }

    private void repaintComponent() {
        if (_grafer != null) {
            _grafer.triggerRedraw();
            _grafer.repaint();
            jPanelGridSettings.updateTextFields();
        }
    }

    private void setNewLimits() {
        final float newMin = (float) formatJTextFieldMinVal.getNumberFromField();
        final float newMax = (float) formatJTextFieldMaxVal.getNumberFromField();
        HiLoData newLimits = HiLoData.hiLoDataFabric(newMin, newMax);
        if (newMin > newMax) {
            JOptionPane.showMessageDialog(null, "Maximum value should be "
                    + "bigger than minimum value!", "Warning",
                    JOptionPane.WARNING_MESSAGE);
            throw new RuntimeException("Minimum-maximum axis settings are invalid.");
        }

        _axis._axisMinMax.setValueScaleLocal(newLimits);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanelGridSettings = new ch.technokrat.gecko.geckocircuits.newscope.JPanelGridSettings();
        jPanelAxisSettings = new javax.swing.JPanel();
        jLabelScaleType = new javax.swing.JLabel();
        jComboBoxScaleType = new javax.swing.JComboBox();
        jCheckBoxAutoScale = new javax.swing.JCheckBox();
        jLabelMinVal = new javax.swing.JLabel();
        jLabelMaxVal = new javax.swing.JLabel();
        jPanelLinePropAxis = new ch.technokrat.gecko.geckocircuits.newscope.JPanelLineProperties();
        jLabelAxisLabel = new javax.swing.JLabel();
        jTextFieldAxisLabel = new javax.swing.JTextField();
        formatJTextFieldMinVal = new ch.technokrat.gecko.geckocircuits.allg.FormatJTextField();
        formatJTextFieldMaxVal = new ch.technokrat.gecko.geckocircuits.allg.FormatJTextField();
        jCheckBoxSymmetricZero = new javax.swing.JCheckBox();

        jPanelAxisSettings.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Arial", 0, 12))); // NOI18N

        jLabelScaleType.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabelScaleType.setText("Scale type:");

        jComboBoxScaleType.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jComboBoxScaleType.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBoxScaleTypeActionPerformed(evt);
            }
        });

        jCheckBoxAutoScale.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBoxAutoScale.setText("Auto-Scaling");
        jCheckBoxAutoScale.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxAutoScaleActionPerformed(evt);
            }
        });

        jLabelMinVal.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabelMinVal.setText("Minimum value:");

        jLabelMaxVal.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabelMaxVal.setText("Maximum value:");

        jLabelAxisLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jLabelAxisLabel.setText("Axis Label:");

        jTextFieldAxisLabel.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jTextFieldAxisLabel.setEnabled(false);
        jTextFieldAxisLabel.addPropertyChangeListener(new java.beans.PropertyChangeListener() {
            public void propertyChange(java.beans.PropertyChangeEvent evt) {
                jTextFieldAxisLabelPropertyChange(evt);
            }
        });

        formatJTextFieldMinVal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formatJTextFieldMinValFocusLost(evt);
            }
        });

        formatJTextFieldMaxVal.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                formatJTextFieldMaxValFocusLost(evt);
            }
        });

        jCheckBoxSymmetricZero.setFont(new java.awt.Font("Arial", 0, 12)); // NOI18N
        jCheckBoxSymmetricZero.setText("Symmetric zero");
        jCheckBoxSymmetricZero.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBoxSymmetricZeroActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanelAxisSettingsLayout = new javax.swing.GroupLayout(jPanelAxisSettings);
        jPanelAxisSettings.setLayout(jPanelAxisSettingsLayout);
        jPanelAxisSettingsLayout.setHorizontalGroup(
            jPanelAxisSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAxisSettingsLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanelAxisSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAxisSettingsLayout.createSequentialGroup()
                        .addComponent(jLabelScaleType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBoxScaleType, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanelAxisSettingsLayout.createSequentialGroup()
                        .addComponent(jCheckBoxAutoScale)
                        .addGap(18, 18, 18)
                        .addComponent(jCheckBoxSymmetricZero))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAxisSettingsLayout.createSequentialGroup()
                        .addGroup(jPanelAxisSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanelAxisSettingsLayout.createSequentialGroup()
                                .addGroup(jPanelAxisSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabelMaxVal)
                                    .addComponent(jLabelAxisLabel))
                                .addGap(18, 18, 18))
                            .addGroup(jPanelAxisSettingsLayout.createSequentialGroup()
                                .addComponent(jLabelMinVal)
                                .addGap(20, 20, 20)))
                        .addGroup(jPanelAxisSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(formatJTextFieldMinVal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(formatJTextFieldMaxVal, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jTextFieldAxisLabel, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 118, Short.MAX_VALUE))))
                .addGap(108, 108, 108)
                .addComponent(jPanelLinePropAxis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanelAxisSettingsLayout.setVerticalGroup(
            jPanelAxisSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanelAxisSettingsLayout.createSequentialGroup()
                .addGroup(jPanelAxisSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanelAxisSettingsLayout.createSequentialGroup()
                        .addGroup(jPanelAxisSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelScaleType)
                            .addComponent(jComboBoxScaleType, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelAxisSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jCheckBoxAutoScale)
                            .addComponent(jCheckBoxSymmetricZero))
                        .addGap(12, 12, 12)
                        .addGroup(jPanelAxisSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelMinVal)
                            .addComponent(formatJTextFieldMinVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanelAxisSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelMaxVal)
                            .addComponent(formatJTextFieldMaxVal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 14, Short.MAX_VALUE)
                        .addGroup(jPanelAxisSettingsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabelAxisLabel)
                            .addComponent(jTextFieldAxisLabel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanelAxisSettingsLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jPanelLinePropAxis, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanelGridSettings, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, 627, Short.MAX_VALUE)
                    .addComponent(jPanelAxisSettings, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanelAxisSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanelGridSettings, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jTextFieldAxisLabelPropertyChange(java.beans.PropertyChangeEvent evt) {//NOPMD//GEN-FIRST:event_jTextFieldAxisLabelPropertyChange
        if (_initDone) {
            _axis._axisSettings.setAchseBeschriftung(jTextFieldAxisLabel.getText());
            repaintComponent();
        }
    }//GEN-LAST:event_jTextFieldAxisLabelPropertyChange

    private void jCheckBoxAutoScaleActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxAutoScaleActionPerformed
        if (jCheckBoxAutoScale.isSelected()) {
            formatJTextFieldMinVal.setEditable(false);
            formatJTextFieldMaxVal.setEditable(false);
            _axis._axisMinMax.setAutoEnabled(true);

            setAxisLimitsToFields();
        } else {
            formatJTextFieldMinVal.setEditable(true);
            formatJTextFieldMaxVal.setEditable(true);
            _axis._axisMinMax.setAutoEnabled(false);

            setAxisLimitsToFields();
        }
        repaintComponent();
    }//GEN-LAST:event_jCheckBoxAutoScaleActionPerformed

    private void jComboBoxScaleTypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBoxScaleTypeActionPerformed
        if (_initDone) {
            _axis.setAxisType(AxisLinLog.getFromOrdinal(jComboBoxScaleType.getSelectedIndex()));
            repaintComponent();
        }
    }//GEN-LAST:event_jComboBoxScaleTypeActionPerformed

    private void formatJTextFieldMinValFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formatJTextFieldMinValFocusLost
        setNewLimits();
        repaintComponent();
    }//GEN-LAST:event_formatJTextFieldMinValFocusLost

    private void formatJTextFieldMaxValFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_formatJTextFieldMaxValFocusLost
        setNewLimits();
        repaintComponent();
    }//GEN-LAST:event_formatJTextFieldMaxValFocusLost

    private void jCheckBoxSymmetricZeroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBoxSymmetricZeroActionPerformed
        _axis._axisMinMax.setCommonZero(jCheckBoxSymmetricZero.isSelected());
        repaintComponent();
    }//GEN-LAST:event_jCheckBoxSymmetricZeroActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private ch.technokrat.gecko.geckocircuits.allg.FormatJTextField formatJTextFieldMaxVal;
    private ch.technokrat.gecko.geckocircuits.allg.FormatJTextField formatJTextFieldMinVal;
    private javax.swing.JCheckBox jCheckBoxAutoScale;
    public javax.swing.JCheckBox jCheckBoxSymmetricZero;
    private javax.swing.JComboBox jComboBoxScaleType;
    private javax.swing.JLabel jLabelAxisLabel;
    private javax.swing.JLabel jLabelMaxVal;
    private javax.swing.JLabel jLabelMinVal;
    private javax.swing.JLabel jLabelScaleType;
    private javax.swing.JPanel jPanelAxisSettings;
    private ch.technokrat.gecko.geckocircuits.newscope.JPanelGridSettings jPanelGridSettings;
    private ch.technokrat.gecko.geckocircuits.newscope.JPanelLineProperties jPanelLinePropAxis;
    private javax.swing.JTextField jTextFieldAxisLabel;
    // End of variables declaration//GEN-END:variables
}
